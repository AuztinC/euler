(ns euler.level1.problem002)

; 1. Make it work
; 2. Make it right
; 3. Make it fast

; 0 1 1 2

;Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2
;, the first 10 terms will be:
; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89
;By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

(defn a [n]
  (if (> n 599999)
    n
    (a (inc n))))

(defn c [e f g]
  (let [a 1 b 2 c 3 d 4]
    (a 0)))

(defn b [n]
  (loop [n n]
    (if (> n 599999)
      n
      (recur (inc n)))))

(defn- fib [a b]
  )

; > ALWAYS "greater than"
; < ALWAYS "less than"

(defn fib-seq [n]
  (if (= 1 n)
    [n]
    (loop [coll [1 2]]
      (let [sum (+ (last coll) (last (butlast coll)))]
        (if (> sum n)
          coll
          (recur (conj coll sum))
          ))))
  )

(fib-seq 500)

(defn fib-filter [coll]
  (filter (fn [el] (if (even? el)
                     el)) coll))

(defn euler-2 [n]
  (reduce + (fib-filter (fib-seq n))))

